Why Secrets management?

In order to use CICD and deploy an application we use variois CICD tools.
For example, Jenkins, Docker, SonarQube, git,etc..
These tools need to be securely accessed through their credentials such 
as usernames, passwords, URLs, tokens, certificates,etc.

The credentials are sensitive information that must be secured and rotated
so that the chances of exposing these sensitive information is reduced.

For example, any one has access to docker registry credentials can delete the 
docker images from the registry. Therefore the docker credentials need to be 
stored securely.

Credentials are also needed for using the following
database
ansible
terraform - aws provider credentials need to be securely stored

Three very important ways to manage secrets
1. Systems Manager - AWS
2. Secrets manager - AWS
3. Hashicorp Vault - NON AWS

Hashicorp offeriing is widely used in the industry.
You can implement this in AWS. But we need to manage it yourself.

which one to chose and when should we chose them?

AWS CICD -> Systems Manager - > Parameter store -> docker username and password 
In day 13 and Day 14 of AWS
Why we should go for secrets manager and Hashicorp Vault when we 
already have Systems Manager?

Systems manager is mainly used to store less sensitive information such as 
usernames and urls. Secrets manager is mainly used to store the passwords.
Secrets manager can be used with AWS lambda function to implement custom
secrets rotation policy in our organisation. We can rotate the secrets once 
in 3 days or 90 days or 180 days based on organisation policy thereby reducing 
the chances of secrets getting compromised.

Use Secrets Manager when secrets are highly sensitive or highly secure.
We can add some additional configurations with Secrets manager.

Secrets manager is bit costly when compared with Systems manager.

Always go with a combined solution in real time scenario.
For example use Systems manager for storing less sensitive secrets (like usernames 
and registry urls ) and use Secrets Manager for highly sensistive secrets 
(like passwords, API tokens, Encryption keys) in order to save costs.
In organisation, the number of usernames and passwords keeps on increasing.
Therefore we need to use combined solution for secrets management.

Hahicorp Vault
==============

Hashicorp vault is used for Hybrid or multi-cloud environment.
If organisation move from AWS to multi-cloud environment,
then Hashicorp can be used with any cloud platform.

It is more popular tool as most organisation use it because it is 
backed by large open source community. There are many additional featues,
additional encryption stratagies compared to other secrets management solutions.

AWS Secrets Manager
-------------------
AWS Secrets Manager helps you manage, retrieve, and rotate database credentials, 
application credentials, OAuth tokens, API keys, and other secrets throughout 
their lifecycles. Many AWS services store and use secrets in Secrets Manager.

AWS Secrets Manager helps avoid possible compromise by anyone who can inspect 
your application or the components. You replace hard-coded credentials with a 
runtime call to the Secrets Manager service to retrieve credentials dynamically 
when you need them.

With Secrets Manager, you can configure an automatic rotation schedule for your secrets. 
This enables you to replace long-term secrets with short-term ones, significantly 
reducing the risk of compromise. Since the credentials are no longer stored with 
the application, rotating credentials no longer requires updating your applications 
and deploying changes to application clients.

Hashicorp Vault
---------------
Widely used in the market. Many organisations use it.
We can implement this in AWS platform and you need to manage this yourself.

Hashicorp runs in two modes
Dev mode and Prod mode

vault server -config=config.hcl
server starts on port 8200

vault command

